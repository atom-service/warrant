// Code generated by protoc-gen-go. DO NOT EDIT.
// source: standard.proto

package standard

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// 状态
type State int32

const (
	State_UNKNOWN              State = 0
	State_SUCCESS              State = 1
	State_FAILURE              State = 2
	State_REPEAT               State = 3
	State_CANCEL               State = 4
	State_WAITING              State = 5
	State_PROCEEDING           State = 6
	State_NOT_EXIST            State = 7
	State_UNDEFINED            State = 8
	State_PROHIBITED           State = 9
	State_PARAMS_INVALID       State = 10
	State_CHANNEL_INVALID      State = 11
	State_DIAL_DB_FATLURE      State = 12
	State_DB_OPERATION_FATLURE State = 13
)

var State_name = map[int32]string{
	0:  "UNKNOWN",
	1:  "SUCCESS",
	2:  "FAILURE",
	3:  "REPEAT",
	4:  "CANCEL",
	5:  "WAITING",
	6:  "PROCEEDING",
	7:  "NOT_EXIST",
	8:  "UNDEFINED",
	9:  "PROHIBITED",
	10: "PARAMS_INVALID",
	11: "CHANNEL_INVALID",
	12: "DIAL_DB_FATLURE",
	13: "DB_OPERATION_FATLURE",
}

var State_value = map[string]int32{
	"UNKNOWN":              0,
	"SUCCESS":              1,
	"FAILURE":              2,
	"REPEAT":               3,
	"CANCEL":               4,
	"WAITING":              5,
	"PROCEEDING":           6,
	"NOT_EXIST":            7,
	"UNDEFINED":            8,
	"PROHIBITED":           9,
	"PARAMS_INVALID":       10,
	"CHANNEL_INVALID":      11,
	"DIAL_DB_FATLURE":      12,
	"DB_OPERATION_FATLURE": 13,
}

func (x State) String() string {
	return proto.EnumName(State_name, int32(x))
}

func (State) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_0b3e239150a6a10f, []int{0}
}

type Task struct {
	ID                   uint64   `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Next                 uint64   `protobuf:"varint,2,opt,name=Next,proto3" json:"Next,omitempty"`
	Prior                uint64   `protobuf:"varint,3,opt,name=Prior,proto3" json:"Prior,omitempty"`
	Owner                uint64   `protobuf:"varint,4,opt,name=Owner,proto3" json:"Owner,omitempty"`
	State                string   `protobuf:"bytes,5,opt,name=State,proto3" json:"State,omitempty"`
	Input                string   `protobuf:"bytes,6,opt,name=Input,proto3" json:"Input,omitempty"`
	Output               string   `protobuf:"bytes,7,opt,name=Output,proto3" json:"Output,omitempty"`
	Channel              string   `protobuf:"bytes,8,opt,name=Channel,proto3" json:"Channel,omitempty"`
	HashCode             string   `protobuf:"bytes,9,opt,name=HashCode,proto3" json:"HashCode,omitempty"`
	RetryCount           uint64   `protobuf:"varint,10,opt,name=RetryCount,proto3" json:"RetryCount,omitempty"`
	CreateTime           string   `protobuf:"bytes,11,opt,name=CreateTime,proto3" json:"CreateTime,omitempty"`
	UpdateTime           string   `protobuf:"bytes,12,opt,name=UpdateTime,proto3" json:"UpdateTime,omitempty"`
	RetryMaxLimit        uint64   `protobuf:"varint,13,opt,name=RetryMaxLimit,proto3" json:"RetryMaxLimit,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Task) Reset()         { *m = Task{} }
func (m *Task) String() string { return proto.CompactTextString(m) }
func (*Task) ProtoMessage()    {}
func (*Task) Descriptor() ([]byte, []int) {
	return fileDescriptor_0b3e239150a6a10f, []int{0}
}

func (m *Task) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Task.Unmarshal(m, b)
}
func (m *Task) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Task.Marshal(b, m, deterministic)
}
func (m *Task) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Task.Merge(m, src)
}
func (m *Task) XXX_Size() int {
	return xxx_messageInfo_Task.Size(m)
}
func (m *Task) XXX_DiscardUnknown() {
	xxx_messageInfo_Task.DiscardUnknown(m)
}

var xxx_messageInfo_Task proto.InternalMessageInfo

func (m *Task) GetID() uint64 {
	if m != nil {
		return m.ID
	}
	return 0
}

func (m *Task) GetNext() uint64 {
	if m != nil {
		return m.Next
	}
	return 0
}

func (m *Task) GetPrior() uint64 {
	if m != nil {
		return m.Prior
	}
	return 0
}

func (m *Task) GetOwner() uint64 {
	if m != nil {
		return m.Owner
	}
	return 0
}

func (m *Task) GetState() string {
	if m != nil {
		return m.State
	}
	return ""
}

func (m *Task) GetInput() string {
	if m != nil {
		return m.Input
	}
	return ""
}

func (m *Task) GetOutput() string {
	if m != nil {
		return m.Output
	}
	return ""
}

func (m *Task) GetChannel() string {
	if m != nil {
		return m.Channel
	}
	return ""
}

func (m *Task) GetHashCode() string {
	if m != nil {
		return m.HashCode
	}
	return ""
}

func (m *Task) GetRetryCount() uint64 {
	if m != nil {
		return m.RetryCount
	}
	return 0
}

func (m *Task) GetCreateTime() string {
	if m != nil {
		return m.CreateTime
	}
	return ""
}

func (m *Task) GetUpdateTime() string {
	if m != nil {
		return m.UpdateTime
	}
	return ""
}

func (m *Task) GetRetryMaxLimit() uint64 {
	if m != nil {
		return m.RetryMaxLimit
	}
	return 0
}

type CreateTaskRequest struct {
	Task                 *Task    `protobuf:"bytes,1,opt,name=Task,proto3" json:"Task,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateTaskRequest) Reset()         { *m = CreateTaskRequest{} }
func (m *CreateTaskRequest) String() string { return proto.CompactTextString(m) }
func (*CreateTaskRequest) ProtoMessage()    {}
func (*CreateTaskRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_0b3e239150a6a10f, []int{1}
}

func (m *CreateTaskRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateTaskRequest.Unmarshal(m, b)
}
func (m *CreateTaskRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateTaskRequest.Marshal(b, m, deterministic)
}
func (m *CreateTaskRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateTaskRequest.Merge(m, src)
}
func (m *CreateTaskRequest) XXX_Size() int {
	return xxx_messageInfo_CreateTaskRequest.Size(m)
}
func (m *CreateTaskRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateTaskRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateTaskRequest proto.InternalMessageInfo

func (m *CreateTaskRequest) GetTask() *Task {
	if m != nil {
		return m.Task
	}
	return nil
}

type CreateTaskResponse struct {
	State                State    `protobuf:"varint,1,opt,name=State,proto3,enum=standard.State" json:"State,omitempty"`
	Message              string   `protobuf:"bytes,2,opt,name=Message,proto3" json:"Message,omitempty"`
	Data                 string   `protobuf:"bytes,3,opt,name=Data,proto3" json:"Data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateTaskResponse) Reset()         { *m = CreateTaskResponse{} }
func (m *CreateTaskResponse) String() string { return proto.CompactTextString(m) }
func (*CreateTaskResponse) ProtoMessage()    {}
func (*CreateTaskResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_0b3e239150a6a10f, []int{2}
}

func (m *CreateTaskResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateTaskResponse.Unmarshal(m, b)
}
func (m *CreateTaskResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateTaskResponse.Marshal(b, m, deterministic)
}
func (m *CreateTaskResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateTaskResponse.Merge(m, src)
}
func (m *CreateTaskResponse) XXX_Size() int {
	return xxx_messageInfo_CreateTaskResponse.Size(m)
}
func (m *CreateTaskResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateTaskResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreateTaskResponse proto.InternalMessageInfo

func (m *CreateTaskResponse) GetState() State {
	if m != nil {
		return m.State
	}
	return State_UNKNOWN
}

func (m *CreateTaskResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *CreateTaskResponse) GetData() string {
	if m != nil {
		return m.Data
	}
	return ""
}

type QueryTaskByIDRequest struct {
	ID                   uint64   `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *QueryTaskByIDRequest) Reset()         { *m = QueryTaskByIDRequest{} }
func (m *QueryTaskByIDRequest) String() string { return proto.CompactTextString(m) }
func (*QueryTaskByIDRequest) ProtoMessage()    {}
func (*QueryTaskByIDRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_0b3e239150a6a10f, []int{3}
}

func (m *QueryTaskByIDRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QueryTaskByIDRequest.Unmarshal(m, b)
}
func (m *QueryTaskByIDRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QueryTaskByIDRequest.Marshal(b, m, deterministic)
}
func (m *QueryTaskByIDRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryTaskByIDRequest.Merge(m, src)
}
func (m *QueryTaskByIDRequest) XXX_Size() int {
	return xxx_messageInfo_QueryTaskByIDRequest.Size(m)
}
func (m *QueryTaskByIDRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryTaskByIDRequest.DiscardUnknown(m)
}

var xxx_messageInfo_QueryTaskByIDRequest proto.InternalMessageInfo

func (m *QueryTaskByIDRequest) GetID() uint64 {
	if m != nil {
		return m.ID
	}
	return 0
}

type QueryTaskByIDResponse struct {
	State                State    `protobuf:"varint,1,opt,name=State,proto3,enum=standard.State" json:"State,omitempty"`
	Message              string   `protobuf:"bytes,2,opt,name=Message,proto3" json:"Message,omitempty"`
	Data                 *Task    `protobuf:"bytes,3,opt,name=Data,proto3" json:"Data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *QueryTaskByIDResponse) Reset()         { *m = QueryTaskByIDResponse{} }
func (m *QueryTaskByIDResponse) String() string { return proto.CompactTextString(m) }
func (*QueryTaskByIDResponse) ProtoMessage()    {}
func (*QueryTaskByIDResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_0b3e239150a6a10f, []int{4}
}

func (m *QueryTaskByIDResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QueryTaskByIDResponse.Unmarshal(m, b)
}
func (m *QueryTaskByIDResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QueryTaskByIDResponse.Marshal(b, m, deterministic)
}
func (m *QueryTaskByIDResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryTaskByIDResponse.Merge(m, src)
}
func (m *QueryTaskByIDResponse) XXX_Size() int {
	return xxx_messageInfo_QueryTaskByIDResponse.Size(m)
}
func (m *QueryTaskByIDResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryTaskByIDResponse.DiscardUnknown(m)
}

var xxx_messageInfo_QueryTaskByIDResponse proto.InternalMessageInfo

func (m *QueryTaskByIDResponse) GetState() State {
	if m != nil {
		return m.State
	}
	return State_UNKNOWN
}

func (m *QueryTaskByIDResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *QueryTaskByIDResponse) GetData() *Task {
	if m != nil {
		return m.Data
	}
	return nil
}

type QueryTaskByHashCodeRequest struct {
	HashCode             string   `protobuf:"bytes,1,opt,name=HashCode,proto3" json:"HashCode,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *QueryTaskByHashCodeRequest) Reset()         { *m = QueryTaskByHashCodeRequest{} }
func (m *QueryTaskByHashCodeRequest) String() string { return proto.CompactTextString(m) }
func (*QueryTaskByHashCodeRequest) ProtoMessage()    {}
func (*QueryTaskByHashCodeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_0b3e239150a6a10f, []int{5}
}

func (m *QueryTaskByHashCodeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QueryTaskByHashCodeRequest.Unmarshal(m, b)
}
func (m *QueryTaskByHashCodeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QueryTaskByHashCodeRequest.Marshal(b, m, deterministic)
}
func (m *QueryTaskByHashCodeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryTaskByHashCodeRequest.Merge(m, src)
}
func (m *QueryTaskByHashCodeRequest) XXX_Size() int {
	return xxx_messageInfo_QueryTaskByHashCodeRequest.Size(m)
}
func (m *QueryTaskByHashCodeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryTaskByHashCodeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_QueryTaskByHashCodeRequest proto.InternalMessageInfo

func (m *QueryTaskByHashCodeRequest) GetHashCode() string {
	if m != nil {
		return m.HashCode
	}
	return ""
}

type QueryTaskByHashCodeResponse struct {
	State                State    `protobuf:"varint,1,opt,name=State,proto3,enum=standard.State" json:"State,omitempty"`
	Message              string   `protobuf:"bytes,2,opt,name=Message,proto3" json:"Message,omitempty"`
	Data                 *Task    `protobuf:"bytes,3,opt,name=Data,proto3" json:"Data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *QueryTaskByHashCodeResponse) Reset()         { *m = QueryTaskByHashCodeResponse{} }
func (m *QueryTaskByHashCodeResponse) String() string { return proto.CompactTextString(m) }
func (*QueryTaskByHashCodeResponse) ProtoMessage()    {}
func (*QueryTaskByHashCodeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_0b3e239150a6a10f, []int{6}
}

func (m *QueryTaskByHashCodeResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QueryTaskByHashCodeResponse.Unmarshal(m, b)
}
func (m *QueryTaskByHashCodeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QueryTaskByHashCodeResponse.Marshal(b, m, deterministic)
}
func (m *QueryTaskByHashCodeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryTaskByHashCodeResponse.Merge(m, src)
}
func (m *QueryTaskByHashCodeResponse) XXX_Size() int {
	return xxx_messageInfo_QueryTaskByHashCodeResponse.Size(m)
}
func (m *QueryTaskByHashCodeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryTaskByHashCodeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_QueryTaskByHashCodeResponse proto.InternalMessageInfo

func (m *QueryTaskByHashCodeResponse) GetState() State {
	if m != nil {
		return m.State
	}
	return State_UNKNOWN
}

func (m *QueryTaskByHashCodeResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *QueryTaskByHashCodeResponse) GetData() *Task {
	if m != nil {
		return m.Data
	}
	return nil
}

type QueryTaskByOwnerRequest struct {
	Owner                uint64   `protobuf:"varint,1,opt,name=Owner,proto3" json:"Owner,omitempty"`
	Limit                uint64   `protobuf:"varint,2,opt,name=Limit,proto3" json:"Limit,omitempty"`
	Offset               uint64   `protobuf:"varint,3,opt,name=Offset,proto3" json:"Offset,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *QueryTaskByOwnerRequest) Reset()         { *m = QueryTaskByOwnerRequest{} }
func (m *QueryTaskByOwnerRequest) String() string { return proto.CompactTextString(m) }
func (*QueryTaskByOwnerRequest) ProtoMessage()    {}
func (*QueryTaskByOwnerRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_0b3e239150a6a10f, []int{7}
}

func (m *QueryTaskByOwnerRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QueryTaskByOwnerRequest.Unmarshal(m, b)
}
func (m *QueryTaskByOwnerRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QueryTaskByOwnerRequest.Marshal(b, m, deterministic)
}
func (m *QueryTaskByOwnerRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryTaskByOwnerRequest.Merge(m, src)
}
func (m *QueryTaskByOwnerRequest) XXX_Size() int {
	return xxx_messageInfo_QueryTaskByOwnerRequest.Size(m)
}
func (m *QueryTaskByOwnerRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryTaskByOwnerRequest.DiscardUnknown(m)
}

var xxx_messageInfo_QueryTaskByOwnerRequest proto.InternalMessageInfo

func (m *QueryTaskByOwnerRequest) GetOwner() uint64 {
	if m != nil {
		return m.Owner
	}
	return 0
}

func (m *QueryTaskByOwnerRequest) GetLimit() uint64 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *QueryTaskByOwnerRequest) GetOffset() uint64 {
	if m != nil {
		return m.Offset
	}
	return 0
}

type QueryTaskByOwnerResponse struct {
	State                State    `protobuf:"varint,1,opt,name=State,proto3,enum=standard.State" json:"State,omitempty"`
	Message              string   `protobuf:"bytes,2,opt,name=Message,proto3" json:"Message,omitempty"`
	Total                uint64   `protobuf:"varint,3,opt,name=Total,proto3" json:"Total,omitempty"`
	Data                 []*Task  `protobuf:"bytes,4,rep,name=Data,proto3" json:"Data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *QueryTaskByOwnerResponse) Reset()         { *m = QueryTaskByOwnerResponse{} }
func (m *QueryTaskByOwnerResponse) String() string { return proto.CompactTextString(m) }
func (*QueryTaskByOwnerResponse) ProtoMessage()    {}
func (*QueryTaskByOwnerResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_0b3e239150a6a10f, []int{8}
}

func (m *QueryTaskByOwnerResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QueryTaskByOwnerResponse.Unmarshal(m, b)
}
func (m *QueryTaskByOwnerResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QueryTaskByOwnerResponse.Marshal(b, m, deterministic)
}
func (m *QueryTaskByOwnerResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryTaskByOwnerResponse.Merge(m, src)
}
func (m *QueryTaskByOwnerResponse) XXX_Size() int {
	return xxx_messageInfo_QueryTaskByOwnerResponse.Size(m)
}
func (m *QueryTaskByOwnerResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryTaskByOwnerResponse.DiscardUnknown(m)
}

var xxx_messageInfo_QueryTaskByOwnerResponse proto.InternalMessageInfo

func (m *QueryTaskByOwnerResponse) GetState() State {
	if m != nil {
		return m.State
	}
	return State_UNKNOWN
}

func (m *QueryTaskByOwnerResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *QueryTaskByOwnerResponse) GetTotal() uint64 {
	if m != nil {
		return m.Total
	}
	return 0
}

func (m *QueryTaskByOwnerResponse) GetData() []*Task {
	if m != nil {
		return m.Data
	}
	return nil
}

type CancelTaskByIDRequest struct {
	ID                   uint64   `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CancelTaskByIDRequest) Reset()         { *m = CancelTaskByIDRequest{} }
func (m *CancelTaskByIDRequest) String() string { return proto.CompactTextString(m) }
func (*CancelTaskByIDRequest) ProtoMessage()    {}
func (*CancelTaskByIDRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_0b3e239150a6a10f, []int{9}
}

func (m *CancelTaskByIDRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CancelTaskByIDRequest.Unmarshal(m, b)
}
func (m *CancelTaskByIDRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CancelTaskByIDRequest.Marshal(b, m, deterministic)
}
func (m *CancelTaskByIDRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CancelTaskByIDRequest.Merge(m, src)
}
func (m *CancelTaskByIDRequest) XXX_Size() int {
	return xxx_messageInfo_CancelTaskByIDRequest.Size(m)
}
func (m *CancelTaskByIDRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CancelTaskByIDRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CancelTaskByIDRequest proto.InternalMessageInfo

func (m *CancelTaskByIDRequest) GetID() uint64 {
	if m != nil {
		return m.ID
	}
	return 0
}

type CancelTaskByIDResponse struct {
	State                State    `protobuf:"varint,1,opt,name=State,proto3,enum=standard.State" json:"State,omitempty"`
	Message              string   `protobuf:"bytes,2,opt,name=Message,proto3" json:"Message,omitempty"`
	Data                 []*Task  `protobuf:"bytes,3,rep,name=Data,proto3" json:"Data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CancelTaskByIDResponse) Reset()         { *m = CancelTaskByIDResponse{} }
func (m *CancelTaskByIDResponse) String() string { return proto.CompactTextString(m) }
func (*CancelTaskByIDResponse) ProtoMessage()    {}
func (*CancelTaskByIDResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_0b3e239150a6a10f, []int{10}
}

func (m *CancelTaskByIDResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CancelTaskByIDResponse.Unmarshal(m, b)
}
func (m *CancelTaskByIDResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CancelTaskByIDResponse.Marshal(b, m, deterministic)
}
func (m *CancelTaskByIDResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CancelTaskByIDResponse.Merge(m, src)
}
func (m *CancelTaskByIDResponse) XXX_Size() int {
	return xxx_messageInfo_CancelTaskByIDResponse.Size(m)
}
func (m *CancelTaskByIDResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CancelTaskByIDResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CancelTaskByIDResponse proto.InternalMessageInfo

func (m *CancelTaskByIDResponse) GetState() State {
	if m != nil {
		return m.State
	}
	return State_UNKNOWN
}

func (m *CancelTaskByIDResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *CancelTaskByIDResponse) GetData() []*Task {
	if m != nil {
		return m.Data
	}
	return nil
}

type QueryLengthByChannelRequest struct {
	Channel              string   `protobuf:"bytes,1,opt,name=Channel,proto3" json:"Channel,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *QueryLengthByChannelRequest) Reset()         { *m = QueryLengthByChannelRequest{} }
func (m *QueryLengthByChannelRequest) String() string { return proto.CompactTextString(m) }
func (*QueryLengthByChannelRequest) ProtoMessage()    {}
func (*QueryLengthByChannelRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_0b3e239150a6a10f, []int{11}
}

func (m *QueryLengthByChannelRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QueryLengthByChannelRequest.Unmarshal(m, b)
}
func (m *QueryLengthByChannelRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QueryLengthByChannelRequest.Marshal(b, m, deterministic)
}
func (m *QueryLengthByChannelRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryLengthByChannelRequest.Merge(m, src)
}
func (m *QueryLengthByChannelRequest) XXX_Size() int {
	return xxx_messageInfo_QueryLengthByChannelRequest.Size(m)
}
func (m *QueryLengthByChannelRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryLengthByChannelRequest.DiscardUnknown(m)
}

var xxx_messageInfo_QueryLengthByChannelRequest proto.InternalMessageInfo

func (m *QueryLengthByChannelRequest) GetChannel() string {
	if m != nil {
		return m.Channel
	}
	return ""
}

type QueryLengthByChannelResponse struct {
	State                State    `protobuf:"varint,1,opt,name=State,proto3,enum=standard.State" json:"State,omitempty"`
	Message              string   `protobuf:"bytes,2,opt,name=Message,proto3" json:"Message,omitempty"`
	Data                 uint64   `protobuf:"varint,3,opt,name=Data,proto3" json:"Data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *QueryLengthByChannelResponse) Reset()         { *m = QueryLengthByChannelResponse{} }
func (m *QueryLengthByChannelResponse) String() string { return proto.CompactTextString(m) }
func (*QueryLengthByChannelResponse) ProtoMessage()    {}
func (*QueryLengthByChannelResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_0b3e239150a6a10f, []int{12}
}

func (m *QueryLengthByChannelResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QueryLengthByChannelResponse.Unmarshal(m, b)
}
func (m *QueryLengthByChannelResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QueryLengthByChannelResponse.Marshal(b, m, deterministic)
}
func (m *QueryLengthByChannelResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryLengthByChannelResponse.Merge(m, src)
}
func (m *QueryLengthByChannelResponse) XXX_Size() int {
	return xxx_messageInfo_QueryLengthByChannelResponse.Size(m)
}
func (m *QueryLengthByChannelResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryLengthByChannelResponse.DiscardUnknown(m)
}

var xxx_messageInfo_QueryLengthByChannelResponse proto.InternalMessageInfo

func (m *QueryLengthByChannelResponse) GetState() State {
	if m != nil {
		return m.State
	}
	return State_UNKNOWN
}

func (m *QueryLengthByChannelResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *QueryLengthByChannelResponse) GetData() uint64 {
	if m != nil {
		return m.Data
	}
	return 0
}

// 汇报任务处理结果
type ReportTaskResultRequest struct {
	ID                   uint64   `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
	State                State    `protobuf:"varint,2,opt,name=State,proto3,enum=standard.State" json:"State,omitempty"`
	Output               string   `protobuf:"bytes,3,opt,name=Output,proto3" json:"Output,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReportTaskResultRequest) Reset()         { *m = ReportTaskResultRequest{} }
func (m *ReportTaskResultRequest) String() string { return proto.CompactTextString(m) }
func (*ReportTaskResultRequest) ProtoMessage()    {}
func (*ReportTaskResultRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_0b3e239150a6a10f, []int{13}
}

func (m *ReportTaskResultRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReportTaskResultRequest.Unmarshal(m, b)
}
func (m *ReportTaskResultRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReportTaskResultRequest.Marshal(b, m, deterministic)
}
func (m *ReportTaskResultRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReportTaskResultRequest.Merge(m, src)
}
func (m *ReportTaskResultRequest) XXX_Size() int {
	return xxx_messageInfo_ReportTaskResultRequest.Size(m)
}
func (m *ReportTaskResultRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ReportTaskResultRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ReportTaskResultRequest proto.InternalMessageInfo

func (m *ReportTaskResultRequest) GetID() uint64 {
	if m != nil {
		return m.ID
	}
	return 0
}

func (m *ReportTaskResultRequest) GetState() State {
	if m != nil {
		return m.State
	}
	return State_UNKNOWN
}

func (m *ReportTaskResultRequest) GetOutput() string {
	if m != nil {
		return m.Output
	}
	return ""
}

// 汇报任务的响应
type ReportTaskResultResponse struct {
	State                State    `protobuf:"varint,1,opt,name=State,proto3,enum=standard.State" json:"State,omitempty"`
	Message              string   `protobuf:"bytes,2,opt,name=Message,proto3" json:"Message,omitempty"`
	Data                 uint64   `protobuf:"varint,3,opt,name=Data,proto3" json:"Data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReportTaskResultResponse) Reset()         { *m = ReportTaskResultResponse{} }
func (m *ReportTaskResultResponse) String() string { return proto.CompactTextString(m) }
func (*ReportTaskResultResponse) ProtoMessage()    {}
func (*ReportTaskResultResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_0b3e239150a6a10f, []int{14}
}

func (m *ReportTaskResultResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReportTaskResultResponse.Unmarshal(m, b)
}
func (m *ReportTaskResultResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReportTaskResultResponse.Marshal(b, m, deterministic)
}
func (m *ReportTaskResultResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReportTaskResultResponse.Merge(m, src)
}
func (m *ReportTaskResultResponse) XXX_Size() int {
	return xxx_messageInfo_ReportTaskResultResponse.Size(m)
}
func (m *ReportTaskResultResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ReportTaskResultResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ReportTaskResultResponse proto.InternalMessageInfo

func (m *ReportTaskResultResponse) GetState() State {
	if m != nil {
		return m.State
	}
	return State_UNKNOWN
}

func (m *ReportTaskResultResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *ReportTaskResultResponse) GetData() uint64 {
	if m != nil {
		return m.Data
	}
	return 0
}

// 领取任务
type ReceiveQueueByChannelRequest struct {
	Channel              string   `protobuf:"bytes,1,opt,name=Channel,proto3" json:"Channel,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReceiveQueueByChannelRequest) Reset()         { *m = ReceiveQueueByChannelRequest{} }
func (m *ReceiveQueueByChannelRequest) String() string { return proto.CompactTextString(m) }
func (*ReceiveQueueByChannelRequest) ProtoMessage()    {}
func (*ReceiveQueueByChannelRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_0b3e239150a6a10f, []int{15}
}

func (m *ReceiveQueueByChannelRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReceiveQueueByChannelRequest.Unmarshal(m, b)
}
func (m *ReceiveQueueByChannelRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReceiveQueueByChannelRequest.Marshal(b, m, deterministic)
}
func (m *ReceiveQueueByChannelRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReceiveQueueByChannelRequest.Merge(m, src)
}
func (m *ReceiveQueueByChannelRequest) XXX_Size() int {
	return xxx_messageInfo_ReceiveQueueByChannelRequest.Size(m)
}
func (m *ReceiveQueueByChannelRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ReceiveQueueByChannelRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ReceiveQueueByChannelRequest proto.InternalMessageInfo

func (m *ReceiveQueueByChannelRequest) GetChannel() string {
	if m != nil {
		return m.Channel
	}
	return ""
}

// 返回一个任务
type ReceiveQueueByChannelResponse struct {
	Tasks                *Task    `protobuf:"bytes,1,opt,name=Tasks,proto3" json:"Tasks,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReceiveQueueByChannelResponse) Reset()         { *m = ReceiveQueueByChannelResponse{} }
func (m *ReceiveQueueByChannelResponse) String() string { return proto.CompactTextString(m) }
func (*ReceiveQueueByChannelResponse) ProtoMessage()    {}
func (*ReceiveQueueByChannelResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_0b3e239150a6a10f, []int{16}
}

func (m *ReceiveQueueByChannelResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReceiveQueueByChannelResponse.Unmarshal(m, b)
}
func (m *ReceiveQueueByChannelResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReceiveQueueByChannelResponse.Marshal(b, m, deterministic)
}
func (m *ReceiveQueueByChannelResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReceiveQueueByChannelResponse.Merge(m, src)
}
func (m *ReceiveQueueByChannelResponse) XXX_Size() int {
	return xxx_messageInfo_ReceiveQueueByChannelResponse.Size(m)
}
func (m *ReceiveQueueByChannelResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ReceiveQueueByChannelResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ReceiveQueueByChannelResponse proto.InternalMessageInfo

func (m *ReceiveQueueByChannelResponse) GetTasks() *Task {
	if m != nil {
		return m.Tasks
	}
	return nil
}

func init() {
	proto.RegisterEnum("standard.State", State_name, State_value)
	proto.RegisterType((*Task)(nil), "standard.Task")
	proto.RegisterType((*CreateTaskRequest)(nil), "standard.CreateTaskRequest")
	proto.RegisterType((*CreateTaskResponse)(nil), "standard.CreateTaskResponse")
	proto.RegisterType((*QueryTaskByIDRequest)(nil), "standard.QueryTaskByIDRequest")
	proto.RegisterType((*QueryTaskByIDResponse)(nil), "standard.QueryTaskByIDResponse")
	proto.RegisterType((*QueryTaskByHashCodeRequest)(nil), "standard.QueryTaskByHashCodeRequest")
	proto.RegisterType((*QueryTaskByHashCodeResponse)(nil), "standard.QueryTaskByHashCodeResponse")
	proto.RegisterType((*QueryTaskByOwnerRequest)(nil), "standard.QueryTaskByOwnerRequest")
	proto.RegisterType((*QueryTaskByOwnerResponse)(nil), "standard.QueryTaskByOwnerResponse")
	proto.RegisterType((*CancelTaskByIDRequest)(nil), "standard.CancelTaskByIDRequest")
	proto.RegisterType((*CancelTaskByIDResponse)(nil), "standard.CancelTaskByIDResponse")
	proto.RegisterType((*QueryLengthByChannelRequest)(nil), "standard.QueryLengthByChannelRequest")
	proto.RegisterType((*QueryLengthByChannelResponse)(nil), "standard.QueryLengthByChannelResponse")
	proto.RegisterType((*ReportTaskResultRequest)(nil), "standard.ReportTaskResultRequest")
	proto.RegisterType((*ReportTaskResultResponse)(nil), "standard.ReportTaskResultResponse")
	proto.RegisterType((*ReceiveQueueByChannelRequest)(nil), "standard.ReceiveQueueByChannelRequest")
	proto.RegisterType((*ReceiveQueueByChannelResponse)(nil), "standard.ReceiveQueueByChannelResponse")
}

func init() { proto.RegisterFile("standard.proto", fileDescriptor_0b3e239150a6a10f) }

var fileDescriptor_0b3e239150a6a10f = []byte{
	// 898 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xbc, 0x56, 0xcd, 0x6e, 0xdb, 0x46,
	0x10, 0x36, 0x65, 0xfd, 0x58, 0xe3, 0x48, 0x61, 0x37, 0x76, 0xb2, 0x60, 0xdc, 0xd4, 0x25, 0x1c,
	0xc7, 0xe8, 0x21, 0x28, 0xdc, 0x43, 0x72, 0xa5, 0x48, 0xba, 0x5e, 0x54, 0xa6, 0x14, 0x8a, 0x6a,
	0x0a, 0x14, 0x85, 0xc0, 0x46, 0x1b, 0x4b, 0x88, 0x42, 0xaa, 0xe4, 0xb2, 0x8d, 0x80, 0xf6, 0xd2,
	0x77, 0xe8, 0xab, 0xf5, 0x1d, 0xfa, 0x0c, 0xbd, 0x14, 0xbb, 0xfc, 0x11, 0x45, 0x93, 0x11, 0x0a,
	0xd8, 0xb9, 0xf1, 0xfb, 0x66, 0x66, 0x67, 0x76, 0x76, 0xe7, 0x5b, 0x42, 0x37, 0x64, 0xae, 0x37,
	0x75, 0x83, 0xe9, 0xf3, 0x65, 0xe0, 0x33, 0x1f, 0xed, 0xa5, 0x58, 0xfd, 0xbb, 0x06, 0x75, 0xc7,
	0x0d, 0xdf, 0xa1, 0x2e, 0xd4, 0x88, 0x81, 0xa5, 0x63, 0xe9, 0xac, 0x6e, 0xd7, 0x88, 0x81, 0x10,
	0xd4, 0x2d, 0xfa, 0x81, 0xe1, 0x9a, 0x60, 0xc4, 0x37, 0x3a, 0x80, 0xc6, 0x30, 0x98, 0xfb, 0x01,
	0xde, 0x15, 0x64, 0x0c, 0x38, 0x3b, 0xf8, 0xcd, 0xa3, 0x01, 0xae, 0xc7, 0xac, 0x00, 0x9c, 0x1d,
	0x31, 0x97, 0x51, 0xdc, 0x38, 0x96, 0xce, 0xda, 0x76, 0x0c, 0x38, 0x4b, 0xbc, 0x65, 0xc4, 0x70,
	0x33, 0x66, 0x05, 0x40, 0x0f, 0xa1, 0x39, 0x88, 0x18, 0xa7, 0x5b, 0x82, 0x4e, 0x10, 0xc2, 0xd0,
	0xd2, 0x67, 0xae, 0xe7, 0xd1, 0x05, 0xde, 0x13, 0x86, 0x14, 0x22, 0x05, 0xf6, 0x2e, 0xdd, 0x70,
	0xa6, 0xfb, 0x53, 0x8a, 0xdb, 0xc2, 0x94, 0x61, 0xf4, 0x04, 0xc0, 0xa6, 0x2c, 0x58, 0xe9, 0x7e,
	0xe4, 0x31, 0x0c, 0xa2, 0xa8, 0x1c, 0xc3, 0xed, 0x7a, 0x40, 0x5d, 0x46, 0x9d, 0xf9, 0x7b, 0x8a,
	0xf7, 0x45, 0x74, 0x8e, 0xe1, 0xf6, 0xf1, 0x72, 0x9a, 0xda, 0xef, 0xc5, 0xf6, 0x35, 0x83, 0x4e,
	0xa0, 0x23, 0x56, 0xbb, 0x72, 0x3f, 0xf4, 0xe7, 0xef, 0xe7, 0x0c, 0x77, 0x44, 0x8a, 0x4d, 0x52,
	0x7d, 0x01, 0x9f, 0x25, 0x6b, 0xba, 0xe1, 0x3b, 0x9b, 0xfe, 0x12, 0xd1, 0x90, 0x21, 0x35, 0x6e,
	0xb6, 0x68, 0xf3, 0xfe, 0x79, 0xf7, 0x79, 0x76, 0x2c, 0xc2, 0x49, 0xd8, 0xd4, 0x39, 0xa0, 0x7c,
	0x60, 0xb8, 0xf4, 0xbd, 0x90, 0xa2, 0xa7, 0x69, 0x3b, 0x79, 0x68, 0xf7, 0xfc, 0xfe, 0x3a, 0x54,
	0xd0, 0x69, 0x7f, 0x31, 0xb4, 0xae, 0x68, 0x18, 0xba, 0xd7, 0x54, 0x1c, 0x5c, 0xdb, 0x4e, 0x21,
	0x3f, 0x4f, 0xc3, 0x65, 0xae, 0x38, 0xba, 0xb6, 0x2d, 0xbe, 0xd5, 0x53, 0x38, 0x78, 0x15, 0xd1,
	0x60, 0xc5, 0x33, 0xf5, 0x56, 0xc4, 0x48, 0xcb, 0x2c, 0xdc, 0x05, 0xf5, 0x77, 0x38, 0x2c, 0xf8,
	0xdd, 0x56, 0x55, 0x6a, 0xae, 0xaa, 0x92, 0x86, 0x88, 0x2a, 0x5f, 0x82, 0x92, 0xcb, 0x9e, 0x1e,
	0x73, 0x5a, 0x6b, 0xfe, 0x26, 0x48, 0x9b, 0x37, 0x41, 0xfd, 0x53, 0x82, 0xc7, 0xa5, 0xa1, 0x9f,
	0xb2, 0xfc, 0x9f, 0xe0, 0x51, 0xae, 0x06, 0x31, 0x1c, 0x69, 0xed, 0xd9, 0xe4, 0x48, 0x85, 0xc9,
	0x89, 0xef, 0x55, 0x3c, 0x7a, 0x31, 0x10, 0x33, 0xf2, 0xf6, 0x6d, 0x48, 0x59, 0x32, 0x7c, 0x09,
	0x52, 0xff, 0x92, 0x00, 0xdf, 0x5c, 0xff, 0xb6, 0x36, 0x78, 0x00, 0x0d, 0xc7, 0x67, 0xee, 0x22,
	0x9d, 0x78, 0x01, 0xb2, 0x6d, 0xd7, 0x8f, 0x77, 0x2b, 0xb7, 0xfd, 0x0c, 0x0e, 0x75, 0xd7, 0x7b,
	0x43, 0x17, 0xdb, 0x2e, 0xd7, 0x1f, 0xf0, 0xb0, 0xe8, 0x78, 0xfb, 0xc7, 0x53, 0x5d, 0xe7, 0x8b,
	0xe4, 0x8a, 0xf4, 0xa9, 0x77, 0xcd, 0x66, 0xbd, 0x55, 0xa2, 0x30, 0x69, 0xb5, 0x39, 0x09, 0x92,
	0x36, 0x24, 0x48, 0x0d, 0xe1, 0xa8, 0x3c, 0xf0, 0x2e, 0x26, 0xb6, 0x9e, 0x54, 0x3b, 0x83, 0x47,
	0x36, 0x5d, 0xfa, 0x01, 0x4b, 0xc4, 0x21, 0x5a, 0xb0, 0x8a, 0xbe, 0xae, 0xf3, 0xd7, 0x3e, 0x9a,
	0x7f, 0xad, 0xbd, 0xbb, 0x79, 0xed, 0x55, 0x7d, 0xc0, 0x37, 0x33, 0xdd, 0xe5, 0xd6, 0x5e, 0xc2,
	0x91, 0x4d, 0xdf, 0xd0, 0xf9, 0xaf, 0xf4, 0x55, 0x44, 0x23, 0xfa, 0x3f, 0x4e, 0xc2, 0x84, 0xcf,
	0x2b, 0x22, 0x93, 0x7a, 0x4f, 0xa0, 0xc1, 0x77, 0x11, 0x56, 0xe8, 0x6e, 0x6c, 0xfc, 0xea, 0x1f,
	0x29, 0xd9, 0x16, 0xda, 0x87, 0xd6, 0xd8, 0xfa, 0xce, 0x1a, 0xbc, 0xb6, 0xe4, 0x1d, 0x0e, 0x46,
	0x63, 0x5d, 0x37, 0x47, 0x23, 0x59, 0xe2, 0xe0, 0x42, 0x23, 0xfd, 0xb1, 0x6d, 0xca, 0x35, 0x04,
	0xd0, 0xb4, 0xcd, 0xa1, 0xa9, 0x39, 0xf2, 0x2e, 0xff, 0xd6, 0x35, 0x4b, 0x37, 0xfb, 0x72, 0x9d,
	0x3b, 0xbd, 0xd6, 0x88, 0x43, 0xac, 0x6f, 0xe5, 0x06, 0xea, 0x02, 0x0c, 0xed, 0x81, 0x6e, 0x9a,
	0x06, 0xc7, 0x4d, 0xd4, 0x81, 0xb6, 0x35, 0x70, 0x26, 0xe6, 0x0f, 0x64, 0xe4, 0xc8, 0x2d, 0x0e,
	0xc7, 0x96, 0x61, 0x5e, 0x10, 0xcb, 0x34, 0xe4, 0xbd, 0xc4, 0xfb, 0x92, 0xf4, 0x88, 0x63, 0x1a,
	0x72, 0x1b, 0x21, 0xe8, 0x0e, 0x35, 0x5b, 0xbb, 0x1a, 0x4d, 0x88, 0xf5, 0xbd, 0xd6, 0x27, 0x86,
	0x0c, 0xe8, 0x01, 0xdc, 0xd7, 0x2f, 0x35, 0xcb, 0x32, 0xfb, 0x19, 0xb9, 0xcf, 0x49, 0x83, 0x68,
	0xfd, 0x89, 0xd1, 0x9b, 0x5c, 0x68, 0x8e, 0x28, 0xf0, 0x1e, 0xc2, 0x70, 0x60, 0xf4, 0x26, 0x83,
	0xa1, 0x69, 0x6b, 0x0e, 0x19, 0x58, 0x99, 0xa5, 0x73, 0xfe, 0x6f, 0x03, 0x9a, 0xa2, 0x59, 0x21,
	0x22, 0xd9, 0x73, 0xc8, 0x7f, 0x03, 0x1e, 0xaf, 0x7b, 0x73, 0xe3, 0xf9, 0x52, 0x8e, 0xca, 0x8d,
	0x71, 0x97, 0xd5, 0x1d, 0x64, 0x43, 0x67, 0xe3, 0x9d, 0x40, 0x4f, 0xd6, 0x01, 0x65, 0x0f, 0x8d,
	0xf2, 0x45, 0xa5, 0x3d, 0x5b, 0x73, 0x0c, 0xdd, 0x4d, 0x79, 0x40, 0xb9, 0xa0, 0x52, 0x85, 0x51,
	0x8e, 0xab, 0x1d, 0xb2, 0x65, 0x7f, 0x04, 0xb9, 0xa8, 0x9a, 0xe8, 0xcb, 0xd2, 0x6a, 0xf2, 0x8a,
	0xad, 0xa8, 0x1f, 0x73, 0xc9, 0x16, 0x9f, 0xc2, 0x83, 0x92, 0x67, 0x07, 0x9d, 0x94, 0x06, 0x17,
	0x1e, 0x34, 0xe5, 0xe9, 0x16, 0xaf, 0x2c, 0xcb, 0x75, 0xf2, 0x7a, 0x17, 0x04, 0x08, 0x15, 0x17,
	0x28, 0x57, 0x36, 0xe5, 0x74, 0x9b, 0x5b, 0x96, 0x68, 0x02, 0x72, 0x51, 0x0a, 0xf2, 0xbd, 0xaa,
	0x10, 0xa4, 0x7c, 0xaf, 0xaa, 0x94, 0x44, 0xdd, 0x39, 0x93, 0xbe, 0x96, 0x90, 0x07, 0x87, 0xa5,
	0x03, 0x8c, 0x4e, 0xf3, 0x4b, 0x54, 0x6b, 0x83, 0xf2, 0x6c, 0xab, 0x5f, 0x3e, 0xdf, 0xcf, 0x4d,
	0xf1, 0x17, 0xfc, 0xcd, 0x7f, 0x01, 0x00, 0x00, 0xff, 0xff, 0xa2, 0x31, 0x35, 0xdb, 0x17, 0x0b,
	0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// QueuesClient is the client API for Queues service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type QueuesClient interface {
	CreateTask(ctx context.Context, in *CreateTaskRequest, opts ...grpc.CallOption) (*CreateTaskResponse, error)
	QueryTaskByID(ctx context.Context, in *QueryTaskByIDRequest, opts ...grpc.CallOption) (*QueryTaskByIDResponse, error)
	CancelTaskByID(ctx context.Context, in *CancelTaskByIDRequest, opts ...grpc.CallOption) (*CancelTaskByIDResponse, error)
	QueryTaskByOwner(ctx context.Context, in *QueryTaskByOwnerRequest, opts ...grpc.CallOption) (*QueryTaskByOwnerResponse, error)
	QueryTaskByHashCode(ctx context.Context, in *QueryTaskByHashCodeRequest, opts ...grpc.CallOption) (*QueryTaskByHashCodeResponse, error)
	QueryLengthByChannel(ctx context.Context, in *QueryLengthByChannelRequest, opts ...grpc.CallOption) (*QueryLengthByChannelResponse, error)
	ReportTaskResult(ctx context.Context, opts ...grpc.CallOption) (Queues_ReportTaskResultClient, error)
	ReceiveQueueByChannel(ctx context.Context, opts ...grpc.CallOption) (Queues_ReceiveQueueByChannelClient, error)
}

type queuesClient struct {
	cc *grpc.ClientConn
}

func NewQueuesClient(cc *grpc.ClientConn) QueuesClient {
	return &queuesClient{cc}
}

func (c *queuesClient) CreateTask(ctx context.Context, in *CreateTaskRequest, opts ...grpc.CallOption) (*CreateTaskResponse, error) {
	out := new(CreateTaskResponse)
	err := c.cc.Invoke(ctx, "/standard.Queues/CreateTask", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *queuesClient) QueryTaskByID(ctx context.Context, in *QueryTaskByIDRequest, opts ...grpc.CallOption) (*QueryTaskByIDResponse, error) {
	out := new(QueryTaskByIDResponse)
	err := c.cc.Invoke(ctx, "/standard.Queues/QueryTaskByID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *queuesClient) CancelTaskByID(ctx context.Context, in *CancelTaskByIDRequest, opts ...grpc.CallOption) (*CancelTaskByIDResponse, error) {
	out := new(CancelTaskByIDResponse)
	err := c.cc.Invoke(ctx, "/standard.Queues/CancelTaskByID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *queuesClient) QueryTaskByOwner(ctx context.Context, in *QueryTaskByOwnerRequest, opts ...grpc.CallOption) (*QueryTaskByOwnerResponse, error) {
	out := new(QueryTaskByOwnerResponse)
	err := c.cc.Invoke(ctx, "/standard.Queues/QueryTaskByOwner", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *queuesClient) QueryTaskByHashCode(ctx context.Context, in *QueryTaskByHashCodeRequest, opts ...grpc.CallOption) (*QueryTaskByHashCodeResponse, error) {
	out := new(QueryTaskByHashCodeResponse)
	err := c.cc.Invoke(ctx, "/standard.Queues/QueryTaskByHashCode", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *queuesClient) QueryLengthByChannel(ctx context.Context, in *QueryLengthByChannelRequest, opts ...grpc.CallOption) (*QueryLengthByChannelResponse, error) {
	out := new(QueryLengthByChannelResponse)
	err := c.cc.Invoke(ctx, "/standard.Queues/QueryLengthByChannel", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *queuesClient) ReportTaskResult(ctx context.Context, opts ...grpc.CallOption) (Queues_ReportTaskResultClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Queues_serviceDesc.Streams[0], "/standard.Queues/ReportTaskResult", opts...)
	if err != nil {
		return nil, err
	}
	x := &queuesReportTaskResultClient{stream}
	return x, nil
}

type Queues_ReportTaskResultClient interface {
	Send(*ReportTaskResultRequest) error
	Recv() (*ReportTaskResultResponse, error)
	grpc.ClientStream
}

type queuesReportTaskResultClient struct {
	grpc.ClientStream
}

func (x *queuesReportTaskResultClient) Send(m *ReportTaskResultRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *queuesReportTaskResultClient) Recv() (*ReportTaskResultResponse, error) {
	m := new(ReportTaskResultResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *queuesClient) ReceiveQueueByChannel(ctx context.Context, opts ...grpc.CallOption) (Queues_ReceiveQueueByChannelClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Queues_serviceDesc.Streams[1], "/standard.Queues/ReceiveQueueByChannel", opts...)
	if err != nil {
		return nil, err
	}
	x := &queuesReceiveQueueByChannelClient{stream}
	return x, nil
}

type Queues_ReceiveQueueByChannelClient interface {
	Send(*ReceiveQueueByChannelRequest) error
	Recv() (*ReceiveQueueByChannelResponse, error)
	grpc.ClientStream
}

type queuesReceiveQueueByChannelClient struct {
	grpc.ClientStream
}

func (x *queuesReceiveQueueByChannelClient) Send(m *ReceiveQueueByChannelRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *queuesReceiveQueueByChannelClient) Recv() (*ReceiveQueueByChannelResponse, error) {
	m := new(ReceiveQueueByChannelResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// QueuesServer is the server API for Queues service.
type QueuesServer interface {
	CreateTask(context.Context, *CreateTaskRequest) (*CreateTaskResponse, error)
	QueryTaskByID(context.Context, *QueryTaskByIDRequest) (*QueryTaskByIDResponse, error)
	CancelTaskByID(context.Context, *CancelTaskByIDRequest) (*CancelTaskByIDResponse, error)
	QueryTaskByOwner(context.Context, *QueryTaskByOwnerRequest) (*QueryTaskByOwnerResponse, error)
	QueryTaskByHashCode(context.Context, *QueryTaskByHashCodeRequest) (*QueryTaskByHashCodeResponse, error)
	QueryLengthByChannel(context.Context, *QueryLengthByChannelRequest) (*QueryLengthByChannelResponse, error)
	ReportTaskResult(Queues_ReportTaskResultServer) error
	ReceiveQueueByChannel(Queues_ReceiveQueueByChannelServer) error
}

// UnimplementedQueuesServer can be embedded to have forward compatible implementations.
type UnimplementedQueuesServer struct {
}

func (*UnimplementedQueuesServer) CreateTask(ctx context.Context, req *CreateTaskRequest) (*CreateTaskResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateTask not implemented")
}
func (*UnimplementedQueuesServer) QueryTaskByID(ctx context.Context, req *QueryTaskByIDRequest) (*QueryTaskByIDResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method QueryTaskByID not implemented")
}
func (*UnimplementedQueuesServer) CancelTaskByID(ctx context.Context, req *CancelTaskByIDRequest) (*CancelTaskByIDResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CancelTaskByID not implemented")
}
func (*UnimplementedQueuesServer) QueryTaskByOwner(ctx context.Context, req *QueryTaskByOwnerRequest) (*QueryTaskByOwnerResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method QueryTaskByOwner not implemented")
}
func (*UnimplementedQueuesServer) QueryTaskByHashCode(ctx context.Context, req *QueryTaskByHashCodeRequest) (*QueryTaskByHashCodeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method QueryTaskByHashCode not implemented")
}
func (*UnimplementedQueuesServer) QueryLengthByChannel(ctx context.Context, req *QueryLengthByChannelRequest) (*QueryLengthByChannelResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method QueryLengthByChannel not implemented")
}
func (*UnimplementedQueuesServer) ReportTaskResult(srv Queues_ReportTaskResultServer) error {
	return status.Errorf(codes.Unimplemented, "method ReportTaskResult not implemented")
}
func (*UnimplementedQueuesServer) ReceiveQueueByChannel(srv Queues_ReceiveQueueByChannelServer) error {
	return status.Errorf(codes.Unimplemented, "method ReceiveQueueByChannel not implemented")
}

func RegisterQueuesServer(s *grpc.Server, srv QueuesServer) {
	s.RegisterService(&_Queues_serviceDesc, srv)
}

func _Queues_CreateTask_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateTaskRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QueuesServer).CreateTask(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/standard.Queues/CreateTask",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QueuesServer).CreateTask(ctx, req.(*CreateTaskRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Queues_QueryTaskByID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QueryTaskByIDRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QueuesServer).QueryTaskByID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/standard.Queues/QueryTaskByID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QueuesServer).QueryTaskByID(ctx, req.(*QueryTaskByIDRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Queues_CancelTaskByID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CancelTaskByIDRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QueuesServer).CancelTaskByID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/standard.Queues/CancelTaskByID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QueuesServer).CancelTaskByID(ctx, req.(*CancelTaskByIDRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Queues_QueryTaskByOwner_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QueryTaskByOwnerRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QueuesServer).QueryTaskByOwner(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/standard.Queues/QueryTaskByOwner",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QueuesServer).QueryTaskByOwner(ctx, req.(*QueryTaskByOwnerRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Queues_QueryTaskByHashCode_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QueryTaskByHashCodeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QueuesServer).QueryTaskByHashCode(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/standard.Queues/QueryTaskByHashCode",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QueuesServer).QueryTaskByHashCode(ctx, req.(*QueryTaskByHashCodeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Queues_QueryLengthByChannel_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QueryLengthByChannelRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QueuesServer).QueryLengthByChannel(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/standard.Queues/QueryLengthByChannel",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QueuesServer).QueryLengthByChannel(ctx, req.(*QueryLengthByChannelRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Queues_ReportTaskResult_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(QueuesServer).ReportTaskResult(&queuesReportTaskResultServer{stream})
}

type Queues_ReportTaskResultServer interface {
	Send(*ReportTaskResultResponse) error
	Recv() (*ReportTaskResultRequest, error)
	grpc.ServerStream
}

type queuesReportTaskResultServer struct {
	grpc.ServerStream
}

func (x *queuesReportTaskResultServer) Send(m *ReportTaskResultResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *queuesReportTaskResultServer) Recv() (*ReportTaskResultRequest, error) {
	m := new(ReportTaskResultRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _Queues_ReceiveQueueByChannel_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(QueuesServer).ReceiveQueueByChannel(&queuesReceiveQueueByChannelServer{stream})
}

type Queues_ReceiveQueueByChannelServer interface {
	Send(*ReceiveQueueByChannelResponse) error
	Recv() (*ReceiveQueueByChannelRequest, error)
	grpc.ServerStream
}

type queuesReceiveQueueByChannelServer struct {
	grpc.ServerStream
}

func (x *queuesReceiveQueueByChannelServer) Send(m *ReceiveQueueByChannelResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *queuesReceiveQueueByChannelServer) Recv() (*ReceiveQueueByChannelRequest, error) {
	m := new(ReceiveQueueByChannelRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _Queues_serviceDesc = grpc.ServiceDesc{
	ServiceName: "standard.Queues",
	HandlerType: (*QueuesServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateTask",
			Handler:    _Queues_CreateTask_Handler,
		},
		{
			MethodName: "QueryTaskByID",
			Handler:    _Queues_QueryTaskByID_Handler,
		},
		{
			MethodName: "CancelTaskByID",
			Handler:    _Queues_CancelTaskByID_Handler,
		},
		{
			MethodName: "QueryTaskByOwner",
			Handler:    _Queues_QueryTaskByOwner_Handler,
		},
		{
			MethodName: "QueryTaskByHashCode",
			Handler:    _Queues_QueryTaskByHashCode_Handler,
		},
		{
			MethodName: "QueryLengthByChannel",
			Handler:    _Queues_QueryLengthByChannel_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "ReportTaskResult",
			Handler:       _Queues_ReportTaskResult_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
		{
			StreamName:    "ReceiveQueueByChannel",
			Handler:       _Queues_ReceiveQueueByChannel_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "standard.proto",
}
